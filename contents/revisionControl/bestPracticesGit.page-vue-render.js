
    var pageVueRenderFn = function anonymous(
) {
with(this){return _c('div',{attrs:{"id":"app"}},[_c('header',{attrs:{"fixed":""}},[_c('navbar',{attrs:{"type":"dark"},scopedSlots:_u([{key:"brand",fn:function(){return [_c('a',{staticClass:"navbar-brand",attrs:{"href":"https://se-education.org","title":"SE-EDU"}},[_c('span',[_c('span',{staticClass:"fas fa-chevron-circle-left",attrs:{"aria-hidden":"true"}}),_v(" "),_c('strong',[_c('strong',[_v("SE-EDU")])])])])]},proxy:true},{key:"right",fn:function(){return [_c('li',{staticClass:"nav-link"},[_c('form',{staticClass:"navbar-form"},[_c('searchbar',{attrs:{"data":searchData,"placeholder":"Search this site","on-hit":searchCallback,"menu-align-right":""}})],1)])]},proxy:true}])},[_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/learningresources/index.html"}},[_c('span',[_c('strong',[_v("Home")])])])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/learningresources/about.html"}},[_c('span',[_c('strong',[_v("About")])])])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/learningresources/contributing.html"}},[_c('span',[_c('strong',[_v("Contributing")])])])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"https://github.com/se-edu/learningresources"}},[_c('span',[_c('span',{staticClass:"fab fa-github",attrs:{"aria-hidden":"true"}})])])])])],1),_v(" "),_c('div',{attrs:{"id":"flex-body"}},[_c('overlay-source',{staticClass:"fixed-header-padding",attrs:{"id":"site-nav","tag-name":"nav","to":"site-nav"}},[_c('div',{staticClass:"site-nav-top"},[_c('div',{staticClass:"font-weight-bold mb-2",staticStyle:{"font-size":"1.25rem"}},[_v("Table of contents")])]),_v(" "),_c('div',{staticClass:"nav-component slim-scroll"},[_c('site-nav',[_c('overlay-source',{staticClass:"site-nav-list site-nav-list-root",attrs:{"tag-name":"ul","to":"mb-site-nav"}},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_c('strong',[_v("Programming Languages")])]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("C++\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/c++/rvalue.html"}},[_v("Rvalue References and Move Semantics")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("CSharp\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/csharp/IntroductionToCSharp.html"}},[_v("Introduction to CSharp")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/csharp/CSAsyncAwait.html"}},[_v("Asynchronous Programming in C#")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/dart/Dart.html"}},[_v("Dart")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/elm/Elm.html"}},[_v("Elm")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/go/Go.html"}},[_v("Go")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/haskell/Haskell.html"}},[_v("Haskell")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Java\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/java/JavaConcurrency.html"}},[_v("Java Concurrency")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/java/streams-an-introduction.html"}},[_v("Java Streams")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/java/JavaSynchronization.html"}},[_v("Java Synchronization")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/java/JavaReflections.html"}},[_v("Java Reflection")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/java/JUnit.html"}},[_v("JUnit")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("JavaScript\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/javascript/WritingTestableJavascript.html"}},[_v("Writing Testable JavaScript Code")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/javascript/Javascript-promises.html"}},[_v("Javascript Promises")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/javascript/Javascript-modules.html"}},[_v("Javascript Modules")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/javascript/staticTypingInJavascript.html"}},[_v("Static Typing in JavaScript")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Kotlin\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/kotlin/kotlin.html"}},[_v("Introduction to Kotlin")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/kotlin/NullSafety.html"}},[_v("Null Safety In Kotlin")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Python\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/python/introduction-to-python.html"}},[_v("Introduction to Python")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/python/numpy.html"}},[_v("NumPy")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/ruby/Ruby.html"}},[_v("Ruby")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/rust/Rust.html"}},[_v("Rust")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/scala/Scala.html"}},[_v("Scala")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/swift/welcome-to-swift.html"}},[_v("Swift")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_c('strong',[_v("SE Topics")])]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Architecture\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/architecture/RESTArchitecturalStyle.html"}},[_v("REST")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Code Quality\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/codeQuality/CodeQualityMetrics.html"}},[_v("Code Quality Metrics")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/projectManagement/documentation.html"}},[_v("Documentation")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/functionalProgramming/intro.html"}},[_v("Functional Programming")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Performance\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/performance/Performance.html"}},[_v("Introduction to Performance Optimization")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/performance/PerformanceProfiling.html"}},[_v("Performance Profiling")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/performance/WebPerformance.html"}},[_v("Web Performance")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Project Management\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/projectManagement/AgileDevelopment.html"}},[_v("Agile Development")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/devops/DevOps.html"}},[_v("DevOps")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/projectManagement/githubActions.html"}},[_v("Github Actions")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Revision Control\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/revisionControl/bestPracticesGit.html"}},[_v("Best Practices with git")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/scalability/scalable-development.html"}},[_v("Scalability")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Static Analysis\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/staticAnalysis/intro.html"}},[_v("Introduction to Static Analysis")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/staticAnalysis/checkStyle.html"}},[_v("CheckStyle")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/staticAnalysis/PMD.html"}},[_v("PMD")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/staticAnalysis/FindBugs.html"}},[_v("FindBugs")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/staticAnalysis/ESLint.html"}},[_v("ESLint")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Testing\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/testing/integration-testing.html"}},[_v("Integration Testing")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/testing/security-testing.html"}},[_v("Security Testing")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/testing/testDrivenDevelopment.html"}},[_v("Test-Driven Development")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/testing/writing-testable-code.html"}},[_v("Writing Testable Code")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("UI/UX\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/uix/accessibility.html"}},[_v("Accessibility")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/uix/design-systems.html"}},[_v("Design Systems")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/uix/uix.html"}},[_v("Introduction to UI/UX")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/uix/refining-ux-skills.html"}},[_v("Refining UX Design Skills")])])])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_c('strong',[_v("App Frameworks")])]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/android/IntroToAndroid.html"}},[_v("Android")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/javascript/Javascript-framework-Angular.html"}},[_v("Angular")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/ios/IntroToIos.html"}},[_v("iOS")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/node/nodejs.html"}},[_v("Node")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/javascript/Javascript-framework-React.html"}},[_v("React")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/javascript/Javascript-framework-Redux.html"}},[_v("Redux")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/ruby/Rails.html"}},[_v("Ruby on Rails")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/java/Spring.html"}},[_v("Spring")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/javascript/Javascript-framework-VueJs.html"}},[_v("Vue")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/csharp/Xamarin.html"}},[_v("Xamarin")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_c('strong',[_v("Tools Useful for Software Engineers")])]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/regex/Regex.html"}},[_v("Regular Expressions")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/docker/Docker.html"}},[_v("Docker")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/zeromq/zeromq.html"}},[_v("ZeroMQ")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/dotfiles/Dotfiles.html"}},[_v("Dotfiles")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('strong',[_c('strong',[_v("Other Topics")])]),_v(" "),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/computerVision/cv.html"}},[_v("Computer Vision")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Databases\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/data/databases/databases.html"}},[_v("DBMS")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/data/sql/SQL.html"}},[_v("SQL")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/data/nosql/NoSQL.html"}},[_v("NoSQL")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/ai/ml.html"}},[_v("Machine Learning")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Multi-Threading\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/gpgpu/gpgpu.html"}},[_v("GPGPU")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/gpgpu/cuda.html"}},[_v("CUDA")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/naturalLanguage/nl.html"}},[_v("Natural Language Processing")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Security\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/security/crossSiteRequestForgery/crossSiteRequestForgery.html"}},[_v("Cross Site Request Forgery")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/security/crossSiteScripting/crossSiteScripting.html"}},[_v("Cross Site Scripting")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/security/cryptography.html"}},[_v("Cryptography")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/security/Https.html"}},[_v("HTTPS")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/security/passwordStorage.html"}},[_v("Password Storage")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/security/sqlInjection.html"}},[_v("SQL Injection")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Shell\n\n"),_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-2",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/learningresources/contents/shells/bash.html"}},[_v("bash")])])])])])])])])],1)],1)]),_v(" "),_c('div',{staticClass:"fixed-header-padding",attrs:{"id":"content-wrapper"}},[_m(0),_v(" "),_c('p'),_c('div',{staticClass:"website-content"},[_m(1),_v(" "),_m(2),_v(" "),_c('box',{attrs:{"id":"article-toc"}},[_c('ul',[_c('li',[_c('a',{attrs:{"href":"#introduction"}},[_v("Introduction‎")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#best-practices"}},[_v("Best Practices‎")]),_v(" "),_c('ul',[_c('li',[_c('a',{attrs:{"href":"#write-good-commit-messages"}},[_v("Write Good Commit Messages‎")]),_v(" "),_c('ul',[_c('li',[_c('a',{attrs:{"href":"#what-constitutes-a-good-commit-message"}},[_v("What Constitutes a Good Commit Message‎")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#set-up-your-editor-for-commit-messages"}},[_v("Set Up Your Editor for Commit Messages‎")])])])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#always-commit-functional-code"}},[_v("Always Commit Functional Code‎")]),_v(" "),_c('ul',[_c('li',[_c('a',{attrs:{"href":"#stashing"}},[_v("Stashing‎")])])])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#one-logical-change-per-commit"}},[_v("One Logical Change per Commit‎")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#hide-the-sausage-making"}},[_v("Hide the Sausage Making‎")]),_v(" "),_c('ul',[_c('li',[_c('a',{attrs:{"href":"#how-to-hide-the-sausage-making"}},[_v("How to Hide the Sausage Making‎")])])])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#respect-published-history"}},[_v("Respect Published History‎")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#keep-up-to-date"}},[_v("Keep Up To Date‎")]),_v(" "),_c('ul',[_c('li',[_c('a',{attrs:{"href":"#working-with-remotes"}},[_v("Working with Remotes‎")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#rebase-versus-merging"}},[_v("Rebase versus Merging‎")])])])])])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#resources"}},[_v("Resources‎")]),_v(" "),_c('ul',[_c('li',[_c('a',{attrs:{"href":"#further-reading"}},[_v("Further Reading‎")])])])])])]),_v(" "),_m(3),_v(" "),_m(4),_v(" "),_m(5),_v(" "),_m(6),_v(" "),_c('p',[_v("Best practices are guidelines that are mostly sensible, but are still guidelines. You can always choose to ignore them although best if you have a compelling reason to do so.")]),_v(" "),_c('hr'),_v(" "),_m(7),_v(" "),_c('p',[_v("Good commit messages can help reviewers or other contributors to understand:")]),_v(" "),_m(8),_v(" "),_c('p',[_v("They also assist you in the development process if you forget what has been done, or if you need to cherry-pick commits for elsewhere.")]),_v(" "),_m(9),_v(" "),_m(10),_v(" "),_m(11),_m(12),_v(" "),_m(13),_v(" "),_c('p',[_v("Give an explanation for the change(s) that is detailed enough so that the reader can judge if it is a good thing to do, without reading the actual diff to determine how well the code does what the explanation promises to do. If your description starts to get too long, that’s a sign that you probably need to split up your commit to finer grained pieces.")]),_v(" "),_m(14),_v(" "),_m(15),_v(" "),_c('p',[_v("As a litmus test, you can try to read your commit message summary in the following manner:")]),_v(" "),_m(16),_v(" "),_c('p',[_v("For example:")]),_v(" "),_m(17),_v(" "),_m(18),_v(" "),_m(19),_v(" "),_m(20),_m(21),_v(" "),_m(22),_m(23),_v(" "),_m(24),_v(" "),_m(25),_v(" "),_m(26),_m(27),_v(" "),_m(28),_c('hr'),_v(" "),_m(29),_v(" "),_c('p',[_v("Merges to the following must always leave the project in a working state, i.e. it can be built and run on:")]),_v(" "),_m(30),_v(" "),_m(31),_v(" "),_c('p',[_v("Changes to your own branches that is used by others should obey always-functioning-commits rule to minimize surprise. This is especially important if you expect your branch to be cherry-picked by another collaborator because they require a specific bit of code that you wrote.")]),_v(" "),_m(32),_v(" "),_m(33),_v(" "),_m(34),_c('p',[_v("Stashes are a purely local construct and cannot be pushed to a remote repository.")]),_v(" "),_c('p',[_v("Read more:")]),_v(" "),_m(35),_v(" "),_c('hr'),_v(" "),_m(36),_v(" "),_c('p',[_v("Commits are the building blocks of a codebase; each building block should contribute exactly one useful thing, like:")]),_v(" "),_m(37),_v(" "),_m(38),_v(" "),_m(39),_v(" "),_m(40),_v(" "),_m(41),_v(" "),_m(42),_v(" "),_c('p',[_v("Read more:")]),_v(" "),_m(43),_v(" "),_c('hr'),_v(" "),_m(44),_v(" "),_m(45),_v(" "),_m(46),_v(" "),_m(47),_v(" "),_c('p',[_v("This may clutter your history with low-level details or make it convoluted to follow for a maintainer or reviewer. Like sausage, you may enjoy eating it but not the process of making it.")]),_v(" "),_m(48),_v(" "),_c('p',[_v("Hiding the sausage is typically achieved by either/both:")]),_v(" "),_m(49),_v(" "),_m(50),_v(" "),_m(51),_v(" "),_c('p',[_v("Read more:")]),_v(" "),_m(52),_v(" "),_c('hr'),_v(" "),_m(53),_v(" "),_c('p',[_v("Always avoid rewriting the published history unless you are very sure of what you are doing, like:")]),_v(" "),_m(54),_v(" "),_m(55),_v(" "),_m(56),_m(57),_v(" "),_m(58),_m(59),_v(" "),_c('p',[_v("Read more:")]),_v(" "),_m(60),_v(" "),_c('hr'),_v(" "),_m(61),_v(" "),_m(62),_v(" "),_m(63),_v(" "),_c('p',[_v("You can have as many remotes as you want, each possibly being read-only or with read/write privileges.")]),_v(" "),_m(64),_v(" "),_m(65),_c('p',[_v("Read more:")]),_v(" "),_m(66),_v(" "),_m(67),_v(" "),_m(68),_m(69),_v(" "),_m(70),_v(" "),_c('p',[_v("Read more:")]),_v(" "),_m(71),_v(" "),_c('hr'),_v(" "),_m(72),_v(" "),_c('p',[_v("These are the resources used in the writing of this chapter, as well as any additional, interesting readings.")]),_v(" "),_m(73),_v(" "),_m(74),_v(" "),_m(75)],1),_v(" "),_c('i',{staticClass:"fa fa-arrow-circle-up fa-lg d-print-none",attrs:{"id":"scroll-top-button","onclick":"handleScrollTop()","aria-hidden":"true"}}),_c('p')]),_v(" "),_c('overlay-source',{staticClass:"fixed-header-padding",attrs:{"id":"page-nav","tag-name":"nav","to":"page-nav"}},[_c('div',{staticClass:"nav-component slim-scroll"},[_c('overlay-source',{staticClass:"nav nav-pills flex-column my-0 small no-flex-wrap",attrs:{"id":"mb-page-nav","tag-name":"nav","to":"mb-page-nav"}},[_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#best-practices-with-git"}},[_v("Best Practices With git‎")]),_v(" "),_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#introduction"}},[_v("Introduction‎")]),_v(" "),_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#best-practices"}},[_v("Best Practices‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#write-good-commit-messages"}},[_v("Write Good Commit Messages‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#what-constitutes-a-good-commit-message"}},[_v("What Constitutes a Good Commit Message‎")]),_v(" "),_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#set-up-your-editor-for-commit-messages"}},[_v("Set up Your Editor for Commit Messages‎")])]),_v(" "),_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#always-commit-functional-code"}},[_v("Always Commit Functional Code‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#stashing"}},[_v("Stashing‎")])]),_v(" "),_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#one-logical-change-per-commit"}},[_v("One Logical Change per Commit‎")]),_v(" "),_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#hide-the-sausage-making"}},[_v("Hide the Sausage Making‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#how-to-hide-the-sausage-making"}},[_v("How to Hide the Sausage Making‎")])]),_v(" "),_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#respect-published-history"}},[_v("Respect Published History‎")]),_v(" "),_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#keep-up-to-date"}},[_v("Keep up to Date‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#working-with-remotes"}},[_v("Working With Remotes‎")]),_v(" "),_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#rebase-versus-merging"}},[_v("Rebase Versus Merging‎")])])]),_v(" "),_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#resources"}},[_v("Resources‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{staticClass:"nav-link py-1",attrs:{"href":"#further-reading"}},[_v("Further Reading‎")])])])],1)])],1),_v(" "),_m(76)])}
};
    var pageVueStaticRenderFns = [function anonymous(
) {
with(this){return _c('h1',{attrs:{"id":"a-student-s-guide-to-software-engineering-tools-and-amp-techniques"}},[_c('span',{staticClass:"anchor",attrs:{"id":"a-student-s-guide-to-software-engineering-tools-and-amp-techniques"}}),_c('span',{staticClass:"text-dark"},[_c('strong',[_c('strong',[_v("A Student's Guide to Software Engineering Tools & Techniques »")])])]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#a-student-s-guide-to-software-engineering-tools-and-amp-techniques","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h1',{attrs:{"id":"best-practices-with-git"}},[_c('span',{staticClass:"anchor",attrs:{"id":"best-practices-with-git"}}),_v("Best Practices With "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git")]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#best-practices-with-git","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Author(s): "),_c('a',{attrs:{"href":"https://github.com/darrenwee"}},[_v("Darren Wee")])])}
},function anonymous(
) {
with(this){return _c('h1',{attrs:{"id":"introduction"}},[_c('span',{staticClass:"anchor",attrs:{"id":"introduction"}}),_v("Introduction"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#introduction","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('a',{attrs:{"href":"https://git-scm.com/"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git")])]),_v(" is a popular source code management tool and commonly used in many open-source projects, especially those on "),_c('a',{attrs:{"href":"https://github.com"}},[_v("GitHub")]),_v(".")])}
},function anonymous(
) {
with(this){return _c('h1',{attrs:{"id":"best-practices"}},[_c('span',{staticClass:"anchor",attrs:{"id":"best-practices"}}),_v("Best Practices"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#best-practices","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git")]),_v(" can be an incredibly useful tool for collaboration or it can be a terrible headache. Best practices exist in order to create a common understanding between users so that the latter does not happen.")])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"write-good-commit-messages"}},[_c('span',{staticClass:"anchor",attrs:{"id":"write-good-commit-messages"}}),_v("Write Good Commit Messages"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#write-good-commit-messages","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("the high-level changes made by your pull request/patch")]),_v(" "),_c('li',[_v("the reasoning behind the changes made by that commit while\n"),_c('ul',[_c('li',[_v("reviewing your code")]),_v(" "),_c('li',[_v("figuring out why a piece of code that is five years old is that way")])])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"what-constitutes-a-good-commit-message"}},[_c('span',{staticClass:"anchor",attrs:{"id":"what-constitutes-a-good-commit-message"}}),_v("What Constitutes a Good Commit Message"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#what-constitutes-a-good-commit-message","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("The easiest way to attain commit message discipline is to stop putting in one-liner descriptions using "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git commit -m \"Add some things to that.\"")]),_v(". Instead, write a proper commit message in an editor:")])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs bash"}},[_c('span',[_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# opens your editor to write a commit message properly")]),_v("\n")]),_c('span',[_v("git add files-to-stage\n")]),_c('span',[_v("git commit\n")]),_c('span',[_v("\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# like above, but shows the diff of the currently staged files")]),_v("\n")]),_c('span',[_v("git add files-to-stage\n")]),_c('span',[_v("git commit --verbose\n")]),_c('span',[_v("\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# amend the most recent commit message")]),_v("\n")]),_c('span',[_v("git commit --amend HEAD^\n")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("Every commit must have a well written commit message "),_c('em',[_v("subject line")]),_v(".")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('p',[_v("Try to limit the subject line to 50 characters (hard limit: 72 chars)")]),_v(" "),_c('ul',[_c('li',[_v("Usually, only the subject line is shown in the log, conflict resolution, interactive rebase, etc.")])])]),_v(" "),_c('li',[_c('p',[_v("Capitalize the subject line e.g. "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Move index.html file to root")])]),_v(" "),_c('ul',[_c('li',[_v("Do not end the subject line with a period.")])])]),_v(" "),_c('li',[_c('p',[_v("Use the imperative mood in the subject line")]),_v(" "),_c('ul',[_c('li',[_v("e.g. "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Add README.md")]),_v(" rather than "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Added README.md")]),_v(" or "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Adding README.md")]),_v(" or "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Adds README.md")]),_v(".")])])]),_v(" "),_c('li',[_c('p',[_v("Use "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("{scope}: {change}")]),_v(" format when applicable")]),_v(" "),_c('ul',[_c('li',[_v("e.g. "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Person class: remove static imports")]),_v(", or "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Unit tests: remove blank lines")])])])]),_v(" "),_c('li',[_c('p',[_v("Commit messages for non-trivial commits should have a "),_c('em',[_v("body")]),_v(" giving details of the commit.")]),_v(" "),_c('ol',[_c('li',[_v("Separate subject from body with a blank line")]),_v(" "),_c('li',[_v("Wrap the body at 72 characters")]),_v(" "),_c('li',[_v("Use the body to explain:\n"),_c('ul',[_c('li',[_c('em',[_v("what")]),_v(" the commit does, and")]),_v(" "),_c('li',[_c('em',[_v("why")]),_v(" it was done that way, such that")]),_v(" "),_c('li',[_v("the reader can refer to the diff to understand "),_c('em',[_v("how")]),_v(" the change was done.")])])]),_v(" "),_c('li',[_v("Avoid including information that can be included in the code as comments.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("Commit messages need to be wrapped to 72 characters or less so that the entire message can be shown without overflow on a standard, 80-column terminal while leaving room for indents/nested reply indicators if you pass "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v(".patch")]),_v(" or "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v(".diff")]),_v(" files via traditional mailing list ("),_c('a',{attrs:{"href":"https://stackoverflow.com/a/2120040/5399892"}},[_v("source")]),_v(").")])}
},function anonymous(
) {
with(this){return _c('p',[_v("Read more: "),_c('a',{attrs:{"href":"https://oss-generic.github.io/process/docs/FormatsAndConventions.html#commit-message"}},[_v("Formats and Conventions: Commit Messages")])])}
},function anonymous(
) {
with(this){return _c('blockquote',[_c('p',[_v("If applied, this commit will "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("your commit message summary here")])])])}
},function anonymous(
) {
with(this){return _c('blockquote',[_c('p',[_v("If applied, this commit will "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("implement getHash() functionality in HashHelper")]),_v(".")])])}
},function anonymous(
) {
with(this){return _c('h4',{attrs:{"id":"examples-of-good-commit-messages"}},[_c('span',{staticClass:"anchor",attrs:{"id":"examples-of-good-commit-messages"}}),_v("Examples of Good Commit Messages"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#examples-of-good-commit-messages","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Adapted from "),_c('a',{attrs:{"href":"https://github.com/se-edu/addressbook-level4/commits/master"}},[_v("se-edu/addressbook-level4")]),_v(" ("),_c('a',{attrs:{"href":"https://github.com/se-edu/addressbook-level4/commit/2f4405c75cd21111952565a9706a9793b475c41e.patch"}},[_v("patch")]),_v(").\nThis commit message follows the guidelines above and also includes the context of the change (how it worked before this patch) as it is necessary to understand "),_c('em',[_v("why")]),_v(" it needed to change.")])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs"}},[_c('span',[_v("UniquePersonList#remove(Person): update return type\n")]),_c('span',[_v("\n")]),_c('span',[_v("UniquePersonList#remove(Person) returns true if the person passed into\n")]),_c('span',[_v("this method can be found in the internal list, and false otherwise. It\n")]),_c('span',[_v("also throws PersonNotFoundException if a person is not found.\n")]),_c('span',[_v("\n")]),_c('span',[_v("Returning a boolean is not required as the exception is thrown before\n")]),_c('span',[_v("the value is returned.\n")]),_c('span',[_v("\n")]),_c('span',[_v("Let's update the return type for UniquePersonList#remove(Person) to\n")]),_c('span',[_v("void.\n")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("Adapted from "),_c('a',{attrs:{"href":"https://github.com/torvalds/linux/commits/master"}},[_v("torvalds/linux")]),_v(" ("),_c('a',{attrs:{"href":"https://github.com/torvalds/linux/commit/9fe8f03bc0227fb573cc3e5b99eb34e19e405ab6.patch"}},[_v("patch")]),_v(").")])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs"}},[_c('span',[_v("drm/amd/display: Fix memleaks when atomic check fails\n")]),_c('span',[_v("\n")]),_c('span',[_v("While checking plane states for updates during atomic check, we create\n")]),_c('span',[_v("dc_plane_states in preparation. These dc states should be freed if\n")]),_c('span',[_v("something errors.\n")]),_c('span',[_v("\n")]),_c('span',[_v("Although the input transfer function is also freed by\n")]),_c('span',[_v("dc_plane_state_release(), we should free it (on error) under the same\n")]),_c('span',[_v("scope as where it is created.\n")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("More examples can be found here: "),_c('a',{attrs:{"href":"https://oss-generic.github.io/process/docs/FormatsAndConventions.html#commit-message"}},[_v("Formats and Conventions: Commit Messages")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"set-up-your-editor-for-commit-messages"}},[_c('span',{staticClass:"anchor",attrs:{"id":"set-up-your-editor-for-commit-messages"}}),_v("Set up Your Editor for Commit Messages"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#set-up-your-editor-for-commit-messages","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("To use your editor of choice for "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git")]),_v("-related functionality, e.g. "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("vim")]),_v(", do one of either in your terminal:")])])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs bash"}},[_c('span',[_v("git config --global core.editor "),_c('span',{pre:true,attrs:{"class":"hljs-string"}},[_v("\"vim\"")]),_v(" "),_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# or you can do the following")]),_v("\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"hljs-built_in"}},[_v("export")]),_v(" GIT_EDITOR=vim "),_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# add to your .bashrc or equivalent")]),_v("\n")])])])}
},function anonymous(
) {
with(this){return _c('ol',{attrs:{"start":"2"}},[_c('li',[_v("Set your editor to wrap after 72 characters. In "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("vim")]),_v(", you can do this by adding this to your "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v(".vimrc")]),_v(":")])])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs bash"}},[_c('span',[_v("autocmd Filetype gitcommit spell textwidth=72\n")])])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"always-commit-functional-code"}},[_c('span',{staticClass:"anchor",attrs:{"id":"always-commit-functional-code"}}),_v("Always Commit Functional Code"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#always-commit-functional-code","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" branch, or equivalent,")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("staging")]),_v(" branch, "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("development")]),_v(" branch or equivalent, if any.")])])}
},function anonymous(
) {
with(this){return _c('p',[_v("Changes to your own branches "),_c('em',[_v("that no one else is using")]),_v(" can have non-functioning commits. However, you may wish to "),_c('a',{attrs:{"href":"#hide-the-sausage-making"}},[_v("hide the sausage making")]),_v(" to squash non-functioning commits into a single, functioning commit before you make a pull request.")])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"stashing"}},[_c('span',{staticClass:"anchor",attrs:{"id":"stashing"}}),_v("Stashing"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#stashing","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("If you need to switch between branches while in the middle of developing a commit, you can use the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git stash")]),_v(" command. Stashing saves the uncommitted changes made in your current working directly. This allows you to save your progress without having to commit non-functioning code.")])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs bash"}},[_c('span',[_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# stash your work not committed to HEAD yet by pushing it onto the stash stack")]),_v("\n")]),_c('span',[_v("git stash\n")]),_c('span',[_v("git stash push "),_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# equivalent to git stash")]),_v("\n")]),_c('span',[_v("\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# restore your most recently stashed work to your current working copy")]),_v("\n")]),_c('span',[_v("git stash pop\n")]),_c('span',[_v("\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# acts like git stash pop, but keeps a copy of the stash in the current stash stack")]),_v("\n")]),_c('span',[_v("git stash apply\n")]),_c('span',[_v("\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# list all stashes in the stack")]),_v("\n")]),_c('span',[_v("git stash list\n")])])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('a',{attrs:{"href":"https://www.atlassian.com/git/tutorials/git-stash"}},[_v("git stash - Saving Changes | Atlassian Git Tutorial")])])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"one-logical-change-per-commit"}},[_c('span',{staticClass:"anchor",attrs:{"id":"one-logical-change-per-commit"}}),_v("One Logical Change per Commit"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#one-logical-change-per-commit","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("adding a new function or piece of data")]),_v(" "),_c('li',[_v("fixing a bug")]),_v(" "),_c('li',[_v("refactoring code or data\n"),_c('ul',[_c('li',[_v("reorganizing code")]),_v(" "),_c('li',[_v("removing typos")]),_v(" "),_c('li',[_v("formatting code")]),_v(" "),_c('li',[_v("changing representation of data to a different format")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("Each "),_c('em',[_v("logical change in code")]),_v(" should translate to exactly one commit, nothing more or less. Doing so allows you to:")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("revert a particular logical change with little to no side effects")]),_v(" "),_c('li',[_v("easily identify bad commits that caused change in behavior")]),_v(" "),_c('li',[_v("collaborate with others easily, e.g. by cherry-picking a single logical change instead of finding a bit of this commit and a bit of that commit")]),_v(" "),_c('li',[_v("package that logical change "),_c('a',{attrs:{"href":"#write-good-commit-messages"}},[_v("with a useful commit message to explain why/how you did something")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("It may also become necessary to scope down what you may deem as a single logical change if it results in a very large commit, as that can also "),_c('a',{attrs:{"href":"https://softwareengineering.stackexchange.com/a/10796"}},[_v("introduce other problems")]),_v(". For example, implementing a single, new feature can be thought of as one logical change to the codebase, but making a pull request for a single, large commit also makes the above benefits disappear.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("If you are concerned about appearances, you can always opt to "),_c('a',{attrs:{"href":"#hide-the-sausage-making"}},[_v("hide the sausage making")]),_v(" to clean up your commit history.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("If you have made several overlapping changes on your working directory (e.g. forgot to commit, etc), you can always "),_c('a',{attrs:{"href":"https://stackoverflow.com/questions/1085162/commit-only-part-of-a-file-in-git"}},[_v("perform a patch-wise stage using "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git add -p")])]),_v(".")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('a',{attrs:{"href":"https://sethrobertson.github.io/GitBestPractices/#commit"}},[_v("Do commit early and often")]),_v(" - an auxiliary best practice of frequency of making commits")]),_v(" "),_c('li',[_c('a',{attrs:{"href":"https://softwareengineering.stackexchange.com/questions/83837/when-to-commit-code"}},[_v("programming practices - When to commit code?")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"https://softwareengineering.stackexchange.com/questions/10793/when-is-a-version-control-commit-too-large"}},[_v("When is a version control commit too large?")]),_v(" - a discussion on judging the suitable size of a commit in different settings")]),_v(" "),_c('li',[_c('a',{attrs:{"href":"https://stackoverflow.com/questions/1085162/commit-only-part-of-a-file-in-git"}},[_v("Commit only part of a file in Git")]),_v(" - this is useful to use as a cheatsheet during interactive staging")])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"hide-the-sausage-making"}},[_c('span',{staticClass:"anchor",attrs:{"id":"hide-the-sausage-making"}}),_v("Hide the Sausage Making"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#hide-the-sausage-making","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('em',[_v("Sausage making")]),_v(" refers to the process by which code is incrementally worked on, where a series of commits (like links in a sausage) make up a branch. It is often desirable to "),_c('em',[_v("hide the sausage making")]),_v(" where the commit history is cleaned up so that it looks neater and is easier to follow.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("When working on a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("feature")]),_v("/"),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("fix")]),_v(" branch, you may:")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('a',{attrs:{"href":"#always-commit-functional-code"}},[_v("commit non-functioning code")]),_v(", or")]),_v(" "),_c('li',[_v("may need "),_c('a',{attrs:{"href":"#one-logical-change-to-one-commit"}},[_v("multiple commits to implement one logical change in code")]),_v(", or")]),_v(" "),_c('li',[_v("cherry-pick a lot of commits from other branches")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"how-to-hide-the-sausage-making"}},[_c('span',{staticClass:"anchor",attrs:{"id":"how-to-hide-the-sausage-making"}}),_v("How to Hide the Sausage Making"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#how-to-hide-the-sausage-making","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("performing an interactive rebase, i.e. "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git rebase -i")])]),_v(" "),_c('li',[_v("patch-wise reset and stage, i.e. "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git reset -p")]),_v(" and "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git add -p")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("Ensure that you do this "),_c('em',[_v("before")]),_v(":")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("pushing to a remote repository "),_c('a',{attrs:{"href":"#respect-published-history"}},[_v("to respect the published history")]),_v(" and")]),_v(" "),_c('li',[_v("performing any merges from other branches.")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('a',{attrs:{"href":"https://sethrobertson.github.io/GitBestPractices/#sausage"}},[_v("On Sausage Making")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History"}},[_v("Git Tools - Rewriting History")]),_v(" (great reference for how to actually do this, under "),_c('em',[_v("Changing Multiple Commit Messages")]),_v(")")])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"respect-published-history"}},[_c('span',{staticClass:"anchor",attrs:{"id":"respect-published-history"}}),_v("Respect Published History"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#respect-published-history","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("You are working on your own branch that "),_c('em',[_v("no one else is using")]),_v(", and\n"),_c('ul',[_c('li',[_v("you want to revert a commit without introducing another commit")]),_v(" "),_c('li',[_v("you are rebasing the branch")]),_v(" "),_c('li',[_v("you are "),_c('a',{attrs:{"href":"#hide-the-sausage-making"}},[_v("cleaning up the history of your branch")])])])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("A failed "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git push")]),_v(" usually means that your local branch is behind its remote counterpart, indicating that the local and remote branches have diverged.")])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs bash"}},[_c('span',[_v("$ git push origin my-branch\n")]),_c('span',[_v("To git@github.com:foo/foo.git\n")]),_c('span',[_v(" ! [rejected]        my-branch -> my-branch (non-fast-forward)\n")]),_c('span',[_v("error: failed to push some refs to "),_c('span',{pre:true,attrs:{"class":"hljs-string"}},[_v("'git@github.com:foo/foo.git'")]),_v("\n")]),_c('span',[_v("hint: Updates were rejected because the tip of your current branch is behind\n")]),_c('span',[_v("hint: its remote counterpart. Integrate the remote changes (e.g.\n")]),_c('span',[_v("hint: "),_c('span',{pre:true,attrs:{"class":"hljs-string"}},[_v("'git pull ...'")]),_v(") before pushing again.\n")]),_c('span',[_v("hint: See the "),_c('span',{pre:true,attrs:{"class":"hljs-string"}},[_v("'Note about fast-forwards'")]),_v(" "),_c('span',{pre:true,attrs:{"class":"hljs-keyword"}},[_v("in")]),_v(" "),_c('span',{pre:true,attrs:{"class":"hljs-string"}},[_v("'git push --help'")]),_v(" "),_c('span',{pre:true,attrs:{"class":"hljs-keyword"}},[_v("for")]),_v(" details.\n")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("Alternatively, you may also see this when a branch diversion has occurred when you run "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git status")]),_v(".")])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs bash"}},[_c('span',[_v("$ git status\n")]),_c('span',[_v("Your branch and "),_c('span',{pre:true,attrs:{"class":"hljs-string"}},[_v("'origin/my-branch'")]),_v(" have diverged,\n")]),_c('span',[_v("and have 3 and 5 different commit(s) each, respectively.\n")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("You can override this by "),_c('a',{attrs:{"href":"https://stackoverflow.com/questions/10510462/force-git-push-to-overwrite-remote-files"}},[_v("making a force push")]),_v(", i.e. "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git push --force")]),_v(" but that would result in rewriting the published history or overwrite changes in the divergent remote commits. Observe the guidelines and ensure that the force push can be made in good faith with respect to your collaborators.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('a',{attrs:{"href":"https://www.atlassian.com/git/tutorials/rewriting-history"}},[_v("Rewriting History - Atlassian")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"https://sethrobertson.github.io/GitBestPractices/#pubonce"}},[_v("Don't change public history.")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"https://stackoverflow.com/questions/10510462/force-git-push-to-overwrite-remote-files"}},[_v("Force \"git push\" to overwrite remote files - StackOverflow")])])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"keep-up-to-date"}},[_c('span',{staticClass:"anchor",attrs:{"id":"keep-up-to-date"}}),_v("Keep up to Date"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#keep-up-to-date","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"working-with-remotes"}},[_c('span',{staticClass:"anchor",attrs:{"id":"working-with-remotes"}}),_v("Working With Remotes"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#working-with-remotes","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('em',[_v("Remotes")]),_v(" refer to versions of the project you are working on that are hosted elsewhere, usually on the Internet. Remotes are very handy for managing collaboration, e.g. if you have to keep your code in sync with the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("upstream")]),_v(" branch of the project, or if you need to pull code from someone else which may not be merged yet.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("Remotes are managed using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git remote")]),_v(" command.")])}
},function anonymous(
) {
with(this){return _c('pre',[_c('code',{pre:true,attrs:{"class":"hljs bash"}},[_c('span',[_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# view all remotes")]),_v("\n")]),_c('span',[_v("git remote -v\n")]),_c('span',[_v("\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# add a remote called \"upstream\" that points to https://github.com/TEAMMATES/teammates")]),_v("\n")]),_c('span',[_v("git remote add upstream https://github.com/TEAMMATES/teammates\n")]),_c('span',[_v("\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# branch off from the master branch of the upstream repository")]),_v("\n")]),_c('span',[_v("git fetch upstream "),_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# get data from upstream repo")]),_v("\n")]),_c('span',[_v("git checkout -b your-fancy-branch upstream/master "),_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# makes a new branch off the head of upstream/master")]),_v("\n")]),_c('span',[_v("\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# change the URL for the upstream remote from HTTPS to SSH")]),_v("\n")]),_c('span',[_v("git remote set-url upstream git@github.com:TEAMMATES/teammates.git\n")]),_c('span',[_v("\n")]),_c('span',[_c('span',{pre:true,attrs:{"class":"hljs-comment"}},[_v("# remove a remote named \"upstream\"")]),_v("\n")]),_c('span',[_v("git remote remove upstream\n")])])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('a',{attrs:{"href":"https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes"}},[_v("Git Basics - Working with Remotes")])])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"rebase-versus-merging"}},[_c('span',{staticClass:"anchor",attrs:{"id":"rebase-versus-merging"}}),_v("Rebase Versus Merging"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#rebase-versus-merging","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('div',{staticClass:"table-responsive"},[_c('table',{staticClass:"markbind-table table table-bordered table-striped"},[_c('thead',[_c('tr',[_c('th',[_v("You should...")]),_v(" "),_c('th',[_v("When ...")])])]),_v(" "),_c('tbody',[_c('tr',[_c('td',[_v("merge")]),_v(" "),_c('td',[_v("you created a branch to develop a feature, and now you want these changes to be inside "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")])])]),_v(" "),_c('tr',[_c('td',[_v("rebase")]),_v(" "),_c('td',[_v("you created a branch from "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" to develop a feature, and someone else pushed a change to "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")]),_v(" before you finished")])])])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("It is generally considered good practice to rebase your feature branch onto whatever branch you're trying to patch "),_c('em',[_v("before")]),_v(" you make the pull request, resolving any conflicts that arise. This:")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('a',{attrs:{"href":"https://www.bitsnbites.eu/a-tidy-linear-git-history/"}},[_v("keeps the history clear and linear")]),_v(" "),_c('ul',[_c('li',[_v("makes backtracking easier")]),_v(" "),_c('li',[_v("easy to follow history")]),_v(" "),_c('li',[_v("reverting/rolling back is much simpler")]),_v(" "),_c('li',[_v("you can use "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git bisect")]),_v(" to find regressions on your branch easily without involving unrelated changes from "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("master")])])])]),_v(" "),_c('li',[_v("ensures your changes are compatible with the head of the branch you're patching")]),_v(" "),_c('li',[_v("makes reviewing/testing easier by "),_c('a',{attrs:{"href":"https://lwn.net/Articles/328436/"}},[_v("not including irrelevant code by merging")])])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('a',{attrs:{"href":"https://www.bitsnbites.eu/a-tidy-linear-git-history/"}},[_v("A Tidy, Linear Git History")]),_v(" - this is an excellent article which has formed my opinion on rebase vs. merge")]),_v(" "),_c('li',[_c('a',{attrs:{"href":"https://lwn.net/Articles/328436/"}},[_v("Rebasing and merging: some git best practices")]),_v(" - the merging/rebase issue involving wisdom from the creator of "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git")]),_v(", Linus Torvalds")]),_v(" "),_c('li',[_c('a',{attrs:{"href":"https://www.atlassian.com/git/tutorials/merging-vs-rebasing"}},[_v("Merging vs. Rebasing - Atlassian")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"https://stackoverflow.com/questions/804115/when-do-you-use-git-rebase-instead-of-git-merge/804178#804178"}},[_v("When do you use git rebase instead of git merge - StackOverflow")]),_v(" - a discussion on when to rebase and when to merge")])])}
},function anonymous(
) {
with(this){return _c('h1',{attrs:{"id":"resources"}},[_c('span',{staticClass:"anchor",attrs:{"id":"resources"}}),_v("Resources"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#resources","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_c('a',{attrs:{"href":"https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html"}},[_v("A Note About Git Commit Messages by Tim Pope")])])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://sethrobertson.github.io/GitBestPractices/"}},[_v("Git Best Practices by Seth Robertson")])])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://www.bitsnbites.eu/a-tidy-linear-git-history/"}},[_v("A Tidy, Linear Git History")])])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://lwn.net/Articles/328436/"}},[_v("Rebasing and merging: some git best practices")]),_v(" involves wisdom from Linus Torvalds")])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://oss-generic.github.io/process/docs/FormatsAndConventions.html#commit-message"}},[_v("Formats and Conventions: Commit Messages")])])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://softwareengineering.stackexchange.com/questions/83837/when-to-commit-code"}},[_v("programming practices - When to commit code?")])])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://softwareengineering.stackexchange.com/questions/10793/when-is-a-version-control-commit-too-large"}},[_v("When is a version control commit too large?")])])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://stackoverflow.com/questions/1085162/commit-only-part-of-a-file-in-git"}},[_v("Commit only part of a file in Git")]),_v(" this is useful to use as a cheatsheet during interactive staging")])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://stackoverflow.com/questions/804115/when-do-you-use-git-rebase-instead-of-git-merge/804178#804178"}},[_v("When do you use git rebase instead of git merge - StackOverflow")])])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://stackoverflow.com/questions/10510462/force-git-push-to-overwrite-remote-files"}},[_v("Force \"git push\" to overwrite remote files - StackOverflow")])])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History"}},[_v("Git Tools - Rewriting History")])])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes"}},[_v("Git Basics - Working with Remotes")])])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://www.atlassian.com/git/tutorials/git-stash"}},[_v("git stash - Saving Changes | Atlassian Git Tutorial")])])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://www.atlassian.com/git/tutorials/merging-vs-rebasing"}},[_v("Merging vs. Rebasing - Atlassian")])])]),_v(" "),_c('li',[_c('p',[_c('a',{attrs:{"href":"https://www.atlassian.com/git/tutorials/rewriting-history"}},[_v("Rewriting History - Atlassian")])])])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"further-reading"}},[_c('span',{staticClass:"anchor",attrs:{"id":"further-reading"}}),_v("Further Reading"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#further-reading","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('a',{attrs:{"href":"https://eagain.net/articles/git-for-computer-scientists/"}},[_v("Git for Computer Scientists")]),_v(" - discusses the underlying implementation of "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("git")]),_v(" (merkle tree)")]),_v(" "),_c('li',[_c('a',{attrs:{"href":"https://git-scm.com/book/en/v2"}},[_v("Pro Git")])]),_v(" "),_c('li',[_c('a',{attrs:{"href":"https://orga.cat/posts/most-useful-git-commands"}},[_v("The most useful git commands")]),_v(" - a reference sheet of some handy command macros")])])}
},function anonymous(
) {
with(this){return _c('footer',[_c('div',{staticClass:"text-center"},[_c('small',[_v("[Powered by "),_c('img',{attrs:{"src":"https://markbind.org/favicon.ico","width":"30"}}),_v(" "),_c('a',{attrs:{"href":"https://markbind.org/"}},[_v("MarkBind 3.0.4")]),_v(" on Tue, 13 Jul 2021, 18:39:25 UTC]")])])])}
}];
  